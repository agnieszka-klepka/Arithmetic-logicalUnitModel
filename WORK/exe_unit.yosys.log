
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12 (git sha1 UNKNOWN, clang 12.0.0 -fPIC -Os)


-- Executing script file `run.ys' --

1. Executing Verilog-2005 frontend: ../MODEL/U1_U2.sv
Parsing SystemVerilog input from `../MODEL/U1_U2.sv' to AST representation.
Generating RTLIL representation for module `\u1intou2'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../MODEL/counting1.sv
Parsing SystemVerilog input from `../MODEL/counting1.sv' to AST representation.
Generating RTLIL representation for module `\zliczanie1'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../MODEL/crc4_check.sv
Parsing SystemVerilog input from `../MODEL/crc4_check.sv' to AST representation.
Generating RTLIL representation for module `\crc4check'.
../MODEL/crc4_check.sv:17: Warning: Range select [8:4] out of bounds on signal `\i_poly': Setting all 5 result bits to undef.
../MODEL/crc4_check.sv:18: Warning: Range [3:0] select out of bounds on signal `\i_poly': Setting 2 MSB bits to undef.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../MODEL/crc_4.sv
Parsing SystemVerilog input from `../MODEL/crc_4.sv' to AST representation.
Generating RTLIL representation for module `\crc_eval'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../MODEL/dekoder_prioryt.sv
Parsing SystemVerilog input from `../MODEL/dekoder_prioryt.sv' to AST representation.
Generating RTLIL representation for module `\dekoder_priorytetowy'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../MODEL/dekoder_term.sv
Parsing SystemVerilog input from `../MODEL/dekoder_term.sv' to AST representation.
Generating RTLIL representation for module `\decoder_therm'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../MODEL/exe_unit.sv
Parsing SystemVerilog input from `../MODEL/exe_unit.sv' to AST representation.
Generating RTLIL representation for module `\exe_unit'.
Successfully finished Verilog frontend.

8. Executing HIERARCHY pass (managing design hierarchy).

8.1. Analyzing design hierarchy..
Top module:  \exe_unit_rtl
Used module:     \u1intou2
Used module:     \decoder_therm
Used module:     \zliczanie1
Used module:     \crc4check
Used module:     \crc_eval
Used module:     \dekoder_priorytetowy
Parameter \BITS = 8

8.2. Executing AST frontend in derive mode using pre-parsed AST for module `\u1intou2'.
Parameter \BITS = 8
Generating RTLIL representation for module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Parameter \LEN = 8

8.3. Executing AST frontend in derive mode using pre-parsed AST for module `\decoder_therm'.
Parameter \LEN = 8
Generating RTLIL representation for module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Parameter \BITS = 8

8.4. Executing AST frontend in derive mode using pre-parsed AST for module `\zliczanie1'.
Parameter \BITS = 8
Generating RTLIL representation for module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Parameter \WCODE = 8

8.5. Executing AST frontend in derive mode using pre-parsed AST for module `\crc4check'.
Parameter \WCODE = 8
Generating RTLIL representation for module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
../MODEL/crc4_check.sv:17: Warning: Range select [8:4] out of bounds on signal `\i_poly': Setting all 5 result bits to undef.
../MODEL/crc4_check.sv:18: Warning: Range [3:0] select out of bounds on signal `\i_poly': Setting 2 MSB bits to undef.
Parameter \WCODE = 8
Parameter \WPOLY = 4

8.6. Executing AST frontend in derive mode using pre-parsed AST for module `\crc_eval'.
Parameter \WCODE = 8
Parameter \WPOLY = 4
Generating RTLIL representation for module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Parameter \BITS = 8

8.7. Executing AST frontend in derive mode using pre-parsed AST for module `\dekoder_priorytetowy'.
Parameter \BITS = 8
Generating RTLIL representation for module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.

8.8. Analyzing design hierarchy..
Top module:  \exe_unit_rtl
Used module:     $paramod\u1intou2\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000
Used module:     $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\crc4check\WCODE=s32'00000000000000000000000000001000
Used module:     $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:     $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000

8.9. Analyzing design hierarchy..
Top module:  \exe_unit_rtl
Used module:     $paramod\u1intou2\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000
Used module:     $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\crc4check\WCODE=s32'00000000000000000000000000001000
Used module:     $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:     $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000
Removing unused module `\exe_unit'.
Removing unused module `\decoder_therm'.
Removing unused module `\dekoder_priorytetowy'.
Removing unused module `\crc_eval'.
Removing unused module `\crc4check'.
Removing unused module `\zliczanie1'.
Removing unused module `\u1intou2'.
Removed 7 unused modules.
Warning: Resizing cell port exe_unit_rtl.crc4check.o_crc from 8 bits to 4 bits.
Warning: Resizing cell port exe_unit_rtl.crc4check.i_poly from 5 bits to 2 bits.
Warning: Resizing cell port exe_unit_rtl.crc_4.o_crc from 8 bits to 2 bits.
Warning: Resizing cell port exe_unit_rtl.crc_4.i_crc from 5 bits to 3 bits.
Warning: Resizing cell port exe_unit_rtl.crc_4.i_poly from 5 bits to 4 bits.

9. Executing SYNTH pass.

9.1. Executing HIERARCHY pass (managing design hierarchy).

9.1.1. Analyzing design hierarchy..
Top module:  \exe_unit_rtl
Used module:     $paramod\u1intou2\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000
Used module:     $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\crc4check\WCODE=s32'00000000000000000000000000001000
Used module:     $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:     $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000

9.1.2. Analyzing design hierarchy..
Top module:  \exe_unit_rtl
Used module:     $paramod\u1intou2\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000
Used module:     $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\crc4check\WCODE=s32'00000000000000000000000000001000
Used module:     $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:     $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000
Removed 0 unused modules.

9.2. Executing PROC pass (convert processes to netlists).

9.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 8 switch rules as full_case in process $proc$../MODEL/dekoder_prioryt.sv:9$215 in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Marked 8 switch rules as full_case in process $proc$../MODEL/crc_4.sv:14$190 in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Marked 8 switch rules as full_case in process $proc$../MODEL/crc4_check.sv:0$165 in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Marked 16 switch rules as full_case in process $proc$../MODEL/counting1.sv:11$132 in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Marked 8 switch rules as full_case in process $proc$../MODEL/dekoder_term.sv:8$123 in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Marked 1 switch rules as full_case in process $proc$../MODEL/U1_U2.sv:8$120 in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Removed 1 dead cases from process $proc$../MODEL/exe_unit.sv:36$77 in module exe_unit_rtl.
Marked 17 switch rules as full_case in process $proc$../MODEL/exe_unit.sv:36$77 in module exe_unit_rtl.
Removed a total of 1 dead cases.

9.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 29 assignments to connections.

9.2.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:34$119'.
  Set init value: \i = 0

9.2.5. Executing PROC_ARST pass (detect async resets in processes).

9.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_prioryt.sv:9$215'.
     1/16: $8\s[0:0]
     2/16: $8\o_result[7:0]
     3/16: $7\s[0:0]
     4/16: $7\o_result[7:0]
     5/16: $6\s[0:0]
     6/16: $6\o_result[7:0]
     7/16: $5\s[0:0]
     8/16: $5\o_result[7:0]
     9/16: $4\s[0:0]
    10/16: $4\o_result[7:0]
    11/16: $3\s[0:0]
    12/16: $3\o_result[7:0]
    13/16: $2\s[0:0]
    14/16: $2\o_result[7:0]
    15/16: $1\s[0:0]
    16/16: $1\o_result[7:0]
Creating decoders for process `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$proc$../MODEL/crc_4.sv:14$190'.
     1/8: $8\crc_tmp[10:0]
     2/8: $7\crc_tmp[10:0]
     3/8: $6\crc_tmp[10:0]
     4/8: $5\crc_tmp[10:0]
     5/8: $4\crc_tmp[10:0]
     6/8: $3\crc_tmp[10:0]
     7/8: $2\crc_tmp[10:0]
     8/8: $1\crc_tmp[10:0]
Creating decoders for process `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.$proc$../MODEL/crc4_check.sv:0$165'.
     1/8: $8\crc_tmp[11:0]
     2/8: $7\crc_tmp[11:0]
     3/8: $6\crc_tmp[11:0]
     4/8: $5\crc_tmp[11:0]
     5/8: $4\crc_tmp[11:0]
     6/8: $3\crc_tmp[11:0]
     7/8: $2\crc_tmp[11:0]
     8/8: $1\crc_tmp[11:0]
Creating decoders for process `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/counting1.sv:11$132'.
     1/16: $16\wynik[7:0]
     2/16: $15\wynik[7:0]
     3/16: $14\wynik[7:0]
     4/16: $13\wynik[7:0]
     5/16: $12\wynik[7:0]
     6/16: $11\wynik[7:0]
     7/16: $10\wynik[7:0]
     8/16: $9\wynik[7:0]
     9/16: $8\wynik[7:0]
    10/16: $7\wynik[7:0]
    11/16: $6\wynik[7:0]
    12/16: $5\wynik[7:0]
    13/16: $4\wynik[7:0]
    14/16: $3\wynik[7:0]
    15/16: $2\wynik[7:0]
    16/16: $1\wynik[7:0]
Creating decoders for process `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_term.sv:8$123'.
     1/8: $8\o_result[7:0]
     2/8: $7\o_result[7:0]
     3/8: $6\o_result[7:0]
     4/8: $5\o_result[7:0]
     5/8: $4\o_result[7:0]
     6/8: $3\o_result[7:0]
     7/8: $2\o_result[7:0]
     8/8: $1\o_result[7:0]
Creating decoders for process `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/U1_U2.sv:8$120'.
     1/1: $1\o_result[7:0]
Creating decoders for process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
     1/17: $1\o_BF0[0:0]
     2/17: $7\zeros[0:0]
     3/17: $6\zeros[0:0]
     4/17: $5\zeros[0:0]
     5/17: $4\zeros[0:0]
     6/17: $3\zeros[0:0]
     7/17: $2\zeros[0:0]
     8/17: $1\zeros[0:0]
     9/17: $1\o_BF1[0:0]
    10/17: $7\ones[0:0]
    11/17: $6\ones[0:0]
    12/17: $5\ones[0:0]
    13/17: $4\ones[0:0]
    14/17: $3\ones[0:0]
    15/17: $2\ones[0:0]
    16/17: $1\ones[0:0]
    17/17: $1\o_result[7:0]
Creating decoders for process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:34$119'.

9.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.\o_result' from process `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_prioryt.sv:9$215'.
No latch inferred for signal `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.\i' from process `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_prioryt.sv:9$215'.
No latch inferred for signal `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.\s' from process `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_prioryt.sv:9$215'.
No latch inferred for signal `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.\i' from process `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$proc$../MODEL/crc_4.sv:14$190'.
No latch inferred for signal `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.\o_crc' from process `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$proc$../MODEL/crc_4.sv:14$190'.
No latch inferred for signal `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.\crc_tmp' from process `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$proc$../MODEL/crc_4.sv:14$190'.
No latch inferred for signal `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.\poly_tmp' from process `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$proc$../MODEL/crc_4.sv:14$190'.
No latch inferred for signal `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.\i' from process `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.$proc$../MODEL/crc4_check.sv:0$165'.
No latch inferred for signal `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.\o_crc' from process `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.$proc$../MODEL/crc4_check.sv:0$165'.
No latch inferred for signal `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.\s_poly' from process `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.$proc$../MODEL/crc4_check.sv:0$165'.
No latch inferred for signal `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.\s_crc' from process `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.$proc$../MODEL/crc4_check.sv:0$165'.
No latch inferred for signal `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.\crc_tmp' from process `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.$proc$../MODEL/crc4_check.sv:0$165'.
No latch inferred for signal `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.\poly_tmp' from process `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.$proc$../MODEL/crc4_check.sv:0$165'.
No latch inferred for signal `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.\o_result' from process `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/counting1.sv:11$132'.
No latch inferred for signal `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.\licz' from process `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/counting1.sv:11$132'.
No latch inferred for signal `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.\wynik' from process `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/counting1.sv:11$132'.
No latch inferred for signal `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.\i' from process `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/counting1.sv:11$132'.
No latch inferred for signal `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.\o_result' from process `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_term.sv:8$123'.
No latch inferred for signal `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.\i' from process `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_term.sv:8$123'.
No latch inferred for signal `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000.\o_result' from process `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/U1_U2.sv:8$120'.
No latch inferred for signal `\exe_unit_rtl.\o_result' from process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
No latch inferred for signal `\exe_unit_rtl.\i' from process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [0]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [1]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [2]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [3]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [4]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [5]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [6]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [7]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [8]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [9]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [10]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [11]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [12]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [13]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [14]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [15]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [16]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [17]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [18]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [19]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [20]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [21]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [22]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [23]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [24]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [25]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [26]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [27]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [28]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [29]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [30]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
Removing init bit 1'0 for non-memory siginal `\exe_unit_rtl.\i [31]` in process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77`.
No latch inferred for signal `\exe_unit_rtl.\o_PF' from process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
No latch inferred for signal `\exe_unit_rtl.\o_NF' from process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
No latch inferred for signal `\exe_unit_rtl.\o_BF1' from process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
No latch inferred for signal `\exe_unit_rtl.\o_BF0' from process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
No latch inferred for signal `\exe_unit_rtl.\ones' from process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
No latch inferred for signal `\exe_unit_rtl.\zeros' from process `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.

9.2.8. Executing PROC_DFF pass (convert process syncs to FFs).

9.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

9.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 8 empty switches in `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_prioryt.sv:9$215'.
Removing empty process `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_prioryt.sv:9$215'.
Found and cleaned up 8 empty switches in `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$proc$../MODEL/crc_4.sv:14$190'.
Removing empty process `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$proc$../MODEL/crc_4.sv:14$190'.
Found and cleaned up 8 empty switches in `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.$proc$../MODEL/crc4_check.sv:0$165'.
Removing empty process `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000.$proc$../MODEL/crc4_check.sv:0$165'.
Found and cleaned up 16 empty switches in `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/counting1.sv:11$132'.
Removing empty process `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/counting1.sv:11$132'.
Found and cleaned up 8 empty switches in `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_term.sv:8$123'.
Removing empty process `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.$proc$../MODEL/dekoder_term.sv:8$123'.
Found and cleaned up 1 empty switch in `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/U1_U2.sv:8$120'.
Removing empty process `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000.$proc$../MODEL/U1_U2.sv:8$120'.
Found and cleaned up 17 empty switches in `\exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
Removing empty process `exe_unit_rtl.$proc$../MODEL/exe_unit.sv:36$77'.
Removing empty process `exe_unit_rtl.$proc$../MODEL/exe_unit.sv:34$119'.
Cleaned up 66 empty switches.

9.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
<suppressed ~17 debug messages>
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
<suppressed ~16 debug messages>
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
<suppressed ~16 debug messages>
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
<suppressed ~17 debug messages>
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
<suppressed ~8 debug messages>
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
<suppressed ~3 debug messages>
Optimizing module exe_unit_rtl.
<suppressed ~27 debug messages>

9.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
<suppressed ~8 debug messages>
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 9 unused cells and 286 unused wires.
<suppressed ~25 debug messages>

9.5. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval...
Checking module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000...
Checking module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000...
Checking module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000...
Checking module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000...
Checking module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000...
Checking module exe_unit_rtl...
Found and reported 0 problems.

9.6. Executing OPT pass (performing simple optimizations).

9.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
<suppressed ~8 debug messages>
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$310: { \i_data \i_crc } -> { 1'0 \i_data [6:0] \i_crc }
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$408: \i_argA -> { 1'0 \i_argA [6:0] }
      Replacing known input bits on port B of cell $procmux$408: { 1'0 \i_argA [7:1] } -> { 2'01 \i_argA [6:1] }
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~51 debug messages>

9.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 0 changes.

9.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.6.6. Executing OPT_DFF pass (perform DFF optimizations).

9.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 9 unused wires.
<suppressed ~2 debug messages>

9.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.6.9. Rerunning OPT passes. (Maybe there is more to do..)

9.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~51 debug messages>

9.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 0 changes.

9.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.6.13. Executing OPT_DFF pass (perform DFF optimizations).

9.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..

9.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.6.16. Finished OPT passes. (There is nothing left to do.)

9.7. Executing FSM pass (extract and optimize FSM).

9.7.1. Executing FSM_DETECT pass (finding FSMs in design).

9.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

9.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

9.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..

9.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

9.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

9.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

9.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

9.8. Executing OPT pass (performing simple optimizations).

9.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~51 debug messages>

9.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 0 changes.

9.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.8.6. Executing OPT_DFF pass (perform DFF optimizations).

9.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..

9.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.8.9. Finished OPT passes. (There is nothing left to do.)

9.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 9 bits (of 11) from mux cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$procmux$289 ($mux).
Removed top 1 bits (of 11) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$195 ($xor).
Removed top 2 bits (of 11) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$198 ($xor).
Removed top 3 bits (of 11) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$201 ($xor).
Removed top 4 bits (of 11) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$204 ($xor).
Removed top 5 bits (of 11) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$207 ($xor).
Removed top 6 bits (of 11) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$210 ($xor).
Removed top 7 bits (of 11) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$213 ($xor).
Removed top 9 bits (of 11) from port Y of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$213 ($xor).
Removed top 9 bits (of 11) from port A of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$213 ($xor).
Removed top 2 bits (of 4) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$213 ($xor).
Removed top 9 bits (of 11) from mux cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$procmux$292 ($mux).
Removed top 9 bits (of 11) from port Y of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$210 ($xor).
Removed top 9 bits (of 11) from port A of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$210 ($xor).
Removed top 3 bits (of 5) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$210 ($xor).
Removed top 9 bits (of 11) from mux cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$procmux$295 ($mux).
Removed top 9 bits (of 11) from port Y of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$207 ($xor).
Removed top 9 bits (of 11) from port A of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$207 ($xor).
Removed top 5 bits (of 6) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$207 ($xor).
Removed top 9 bits (of 11) from mux cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$procmux$298 ($mux).
Removed top 9 bits (of 11) from port Y of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$204 ($xor).
Removed top 9 bits (of 11) from port A of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$204 ($xor).
Removed top 6 bits (of 7) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$204 ($xor).
Removed top 9 bits (of 11) from mux cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$procmux$301 ($mux).
Removed top 9 bits (of 11) from port Y of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$201 ($xor).
Removed top 9 bits (of 11) from port A of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$201 ($xor).
Removed top 7 bits (of 8) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$201 ($xor).
Removed top 9 bits (of 11) from mux cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$procmux$304 ($mux).
Removed top 9 bits (of 11) from port Y of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$198 ($xor).
Removed top 9 bits (of 11) from port A of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$198 ($xor).
Removed top 8 bits (of 9) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$198 ($xor).
Removed top 9 bits (of 11) from mux cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$procmux$307 ($mux).
Removed top 9 bits (of 11) from port Y of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$195 ($xor).
Removed top 9 bits (of 11) from port A of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$195 ($xor).
Removed top 9 bits (of 10) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$195 ($xor).
Removed top 9 bits (of 11) from mux cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$procmux$310 ($mux).
Removed top 9 bits (of 11) from port Y of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$192 ($xor).
Removed top 9 bits (of 11) from port A of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$192 ($xor).
Removed top 10 bits (of 11) from port B of cell $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$192 ($xor).
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$1\crc_tmp[10:0].
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$2\crc_tmp[10:0].
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$3\crc_tmp[10:0].
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$4\crc_tmp[10:0].
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$5\crc_tmp[10:0].
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$6\crc_tmp[10:0].
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$7\crc_tmp[10:0].
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$192_Y.
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$195_Y.
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$198_Y.
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$201_Y.
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$204_Y.
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$207_Y.
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$210_Y.
Removed top 9 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.$xor$../MODEL/crc_4.sv:24$213_Y.
Removed top 8 bits (of 11) from wire $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.poly_tmp.
Removed top 7 bits (of 8) from mux cell $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.$procmux$403 ($mux).
Removed top 7 bits (of 8) from wire $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.$2\o_result[7:0].
Removed top 4 bits (of 8) from mux cell $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.$procmux$286 ($mux).
Removed top 4 bits (of 8) from wire $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.$1\o_result[7:0].
Removed top 1 bits (of 8) from mux cell $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.$procmux$408 ($mux).
Removed top 7 bits (of 8) from mux cell $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$procmux$382 ($mux).
Removed top 7 bits (of 8) from port A of cell $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$add$../MODEL/counting1.sv:19$136 ($add).
Removed top 6 bits (of 8) from port Y of cell $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$add$../MODEL/counting1.sv:19$136 ($add).
Removed top 7 bits (of 8) from wire $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$1\wynik[7:0].
Removed top 6 bits (of 8) from wire $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.$add$../MODEL/counting1.sv:19$136_Y.
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$92 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$92 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$94 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$94 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$96 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$96 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$98 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$98 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$100 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$100 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$102 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$102 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$107 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$107 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$109 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$109 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$111 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$111 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$113 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$113 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$115 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$115 ($add).
Removed top 31 bits (of 32) from port B of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$117 ($add).
Removed top 31 bits (of 32) from port Y of cell exe_unit_rtl.$add$../MODEL/exe_unit.sv:89$117 ($add).
Removed top 1 bits (of 4) from port B of cell exe_unit_rtl.$procmux$464_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell exe_unit_rtl.$procmux$465_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell exe_unit_rtl.$procmux$466_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell exe_unit_rtl.$procmux$467_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell exe_unit_rtl.$procmux$468_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell exe_unit_rtl.$procmux$469_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell exe_unit_rtl.$procmux$470_CMP0 ($eq).
Removed top 31 bits (of 32) from wire exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$100_Y.
Removed top 31 bits (of 32) from wire exe_unit_rtl.$add$../MODEL/exe_unit.sv:70$92_Y.
Removed top 6 bits (of 8) from wire exe_unit_rtl.s_crc4.
Removed top 4 bits (of 8) from wire exe_unit_rtl.s_crc4_check.

9.10. Executing PEEPOPT pass (run peephole optimizers).

9.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 24 unused wires.
<suppressed ~5 debug messages>

9.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000:
  creating $macc model for $add$../MODEL/counting1.sv:19$136 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$138 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$140 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$142 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$144 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$146 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$148 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$150 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$152 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$154 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$156 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$158 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$160 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$162 ($add).
  creating $macc model for $add$../MODEL/counting1.sv:19$164 ($add).
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$164.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$162.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$160.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$158.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$156.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$154.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$152.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$150.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$148.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$146.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$144.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$142.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$140.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$138.
  creating $alu model for $macc $add$../MODEL/counting1.sv:19$136.
  creating $alu cell for $add$../MODEL/counting1.sv:19$136: $auto$alumacc.cc:485:replace_alu$496
  creating $alu cell for $add$../MODEL/counting1.sv:19$138: $auto$alumacc.cc:485:replace_alu$499
  creating $alu cell for $add$../MODEL/counting1.sv:19$140: $auto$alumacc.cc:485:replace_alu$502
  creating $alu cell for $add$../MODEL/counting1.sv:19$142: $auto$alumacc.cc:485:replace_alu$505
  creating $alu cell for $add$../MODEL/counting1.sv:19$144: $auto$alumacc.cc:485:replace_alu$508
  creating $alu cell for $add$../MODEL/counting1.sv:19$146: $auto$alumacc.cc:485:replace_alu$511
  creating $alu cell for $add$../MODEL/counting1.sv:19$148: $auto$alumacc.cc:485:replace_alu$514
  creating $alu cell for $add$../MODEL/counting1.sv:19$150: $auto$alumacc.cc:485:replace_alu$517
  creating $alu cell for $add$../MODEL/counting1.sv:19$152: $auto$alumacc.cc:485:replace_alu$520
  creating $alu cell for $add$../MODEL/counting1.sv:19$154: $auto$alumacc.cc:485:replace_alu$523
  creating $alu cell for $add$../MODEL/counting1.sv:19$156: $auto$alumacc.cc:485:replace_alu$526
  creating $alu cell for $add$../MODEL/counting1.sv:19$158: $auto$alumacc.cc:485:replace_alu$529
  creating $alu cell for $add$../MODEL/counting1.sv:19$160: $auto$alumacc.cc:485:replace_alu$532
  creating $alu cell for $add$../MODEL/counting1.sv:19$162: $auto$alumacc.cc:485:replace_alu$535
  creating $alu cell for $add$../MODEL/counting1.sv:19$164: $auto$alumacc.cc:485:replace_alu$538
  created 15 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module exe_unit_rtl:
  creating $macc model for $add$../MODEL/exe_unit.sv:43$78 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:70$100 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:70$102 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:70$92 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:70$94 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:70$96 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:70$98 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:89$107 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:89$109 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:89$111 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:89$113 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:89$115 ($add).
  creating $macc model for $add$../MODEL/exe_unit.sv:89$117 ($add).
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:89$117.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:89$115.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:89$113.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:89$111.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:89$109.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:89$107.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:70$98.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:70$96.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:70$94.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:70$92.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:70$102.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:70$100.
  creating $alu model for $macc $add$../MODEL/exe_unit.sv:43$78.
  creating $alu cell for $add$../MODEL/exe_unit.sv:43$78: $auto$alumacc.cc:485:replace_alu$541
  creating $alu cell for $add$../MODEL/exe_unit.sv:70$100: $auto$alumacc.cc:485:replace_alu$544
  creating $alu cell for $add$../MODEL/exe_unit.sv:70$102: $auto$alumacc.cc:485:replace_alu$547
  creating $alu cell for $add$../MODEL/exe_unit.sv:70$92: $auto$alumacc.cc:485:replace_alu$550
  creating $alu cell for $add$../MODEL/exe_unit.sv:70$94: $auto$alumacc.cc:485:replace_alu$553
  creating $alu cell for $add$../MODEL/exe_unit.sv:70$96: $auto$alumacc.cc:485:replace_alu$556
  creating $alu cell for $add$../MODEL/exe_unit.sv:70$98: $auto$alumacc.cc:485:replace_alu$559
  creating $alu cell for $add$../MODEL/exe_unit.sv:89$107: $auto$alumacc.cc:485:replace_alu$562
  creating $alu cell for $add$../MODEL/exe_unit.sv:89$109: $auto$alumacc.cc:485:replace_alu$565
  creating $alu cell for $add$../MODEL/exe_unit.sv:89$111: $auto$alumacc.cc:485:replace_alu$568
  creating $alu cell for $add$../MODEL/exe_unit.sv:89$113: $auto$alumacc.cc:485:replace_alu$571
  creating $alu cell for $add$../MODEL/exe_unit.sv:89$115: $auto$alumacc.cc:485:replace_alu$574
  creating $alu cell for $add$../MODEL/exe_unit.sv:89$117: $auto$alumacc.cc:485:replace_alu$577
  created 13 $alu and 0 $macc cells.

9.13. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module exe_unit_rtl that may be considered for resource sharing.
  Analyzing resource sharing options for $sshl$../MODEL/exe_unit.sv:47$83 ($sshl):
    Found 1 activation_patterns using ctrl signal $procmux$467_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$../MODEL/exe_unit.sv:46$82 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$468_CMP.
    No candidates found.

9.14. Executing OPT pass (performing simple optimizations).

9.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
<suppressed ~6 debug messages>
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~51 debug messages>

9.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 0 changes.

9.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.14.6. Executing OPT_DFF pass (perform DFF optimizations).

9.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

9.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
<suppressed ~6 debug messages>
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.14.9. Rerunning OPT passes. (Maybe there is more to do..)

9.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~45 debug messages>

9.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 0 changes.

9.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.14.13. Executing OPT_DFF pass (perform DFF optimizations).

9.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

9.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.14.16. Rerunning OPT passes. (Maybe there is more to do..)

9.14.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~45 debug messages>

9.14.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 0 changes.

9.14.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.14.20. Executing OPT_DFF pass (perform DFF optimizations).

9.14.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..

9.14.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.14.23. Finished OPT passes. (There is nothing left to do.)

9.15. Executing MEMORY pass.

9.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

9.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

9.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

9.15.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

9.15.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..

9.15.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

9.15.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

9.15.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..

9.15.9. Executing MEMORY_COLLECT pass (generating $mem cells).

9.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..

9.17. Executing OPT pass (performing simple optimizations).

9.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
<suppressed ~5 debug messages>
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
<suppressed ~1 debug messages>
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
<suppressed ~7 debug messages>
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
<suppressed ~1 debug messages>
Optimizing module exe_unit_rtl.
<suppressed ~9 debug messages>

9.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.17.3. Executing OPT_DFF pass (perform DFF optimizations).

9.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 8 unused wires.
<suppressed ~5 debug messages>

9.17.5. Finished fast OPT passes.

9.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

9.19. Executing OPT pass (performing simple optimizations).

9.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

9.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
    Consolidated identical input bits for $mux cell $procmux$292:
      Old ports: A=\i_crc [1:0], B={ $auto$opt_expr.cc:205:group_cell_inputs$580 \i_crc [0] }, Y=$7\crc_tmp[10:0]
      New ports: A=\i_crc [1], B=$auto$opt_expr.cc:205:group_cell_inputs$580, Y=$7\crc_tmp[10:0] [1]
      New connections: $7\crc_tmp[10:0] [0] = \i_crc [0]
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$400:
      Old ports: A={ 7'0000000 \i_argA [1] }, B=8'00000010, Y=$3\o_result[7:0]
      New ports: A={ 1'0 \i_argA [1] }, B=2'10, Y=$3\o_result[7:0] [1:0]
      New connections: $3\o_result[7:0] [7:2] = 6'000000
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$397:
      Old ports: A=$3\o_result[7:0], B=8'00000011, Y=$4\o_result[7:0]
      New ports: A=$3\o_result[7:0] [1:0], B=2'11, Y=$4\o_result[7:0] [1:0]
      New connections: $4\o_result[7:0] [7:2] = 6'000000
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$394:
      Old ports: A=$4\o_result[7:0], B=8'00000100, Y=$5\o_result[7:0]
      New ports: A={ 1'0 $4\o_result[7:0] [1:0] }, B=3'100, Y=$5\o_result[7:0] [2:0]
      New connections: $5\o_result[7:0] [7:3] = 5'00000
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$391:
      Old ports: A=$5\o_result[7:0], B=8'00000101, Y=$6\o_result[7:0]
      New ports: A=$5\o_result[7:0] [2:0], B=3'101, Y=$6\o_result[7:0] [2:0]
      New connections: $6\o_result[7:0] [7:3] = 5'00000
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$388:
      Old ports: A=$6\o_result[7:0], B=8'00000110, Y=$7\o_result[7:0]
      New ports: A=$6\o_result[7:0] [2:0], B=3'110, Y=$7\o_result[7:0] [2:0]
      New connections: $7\o_result[7:0] [7:3] = 5'00000
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$385:
      Old ports: A=$7\o_result[7:0], B=8'00000111, Y=\o_result
      New ports: A=$7\o_result[7:0] [2:0], B=3'111, Y=\o_result [2:0]
      New connections: \o_result [7:3] = 5'00000
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$280:
      Old ports: A={ 4'0000 $1\o_result[7:0] }, B=8'00000111, Y=$2\o_result[7:0]
      New ports: A=$1\o_result[7:0], B=4'0111, Y=$2\o_result[7:0] [3:0]
      New connections: $2\o_result[7:0] [7:4] = 4'0000
    Consolidated identical input bits for $mux cell $procmux$286:
      Old ports: A=4'0000, B=4'1000, Y=$1\o_result[7:0]
      New ports: A=1'0, B=1'1, Y=$1\o_result[7:0] [3]
      New connections: $1\o_result[7:0] [2:0] = 3'000
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$274:
      Old ports: A=$2\o_result[7:0], B=8'00000110, Y=$3\o_result[7:0]
      New ports: A=$2\o_result[7:0] [3:0], B=4'0110, Y=$3\o_result[7:0] [3:0]
      New connections: $3\o_result[7:0] [7:4] = 4'0000
    Consolidated identical input bits for $mux cell $procmux$280:
      Old ports: A=$1\o_result[7:0], B=4'0111, Y=$2\o_result[7:0] [3:0]
      New ports: A={ $1\o_result[7:0] [3] 1'0 }, B=2'01, Y={ $2\o_result[7:0] [3] $2\o_result[7:0] [0] }
      New connections: $2\o_result[7:0] [2:1] = { $2\o_result[7:0] [0] $2\o_result[7:0] [0] }
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$268:
      Old ports: A=$3\o_result[7:0], B=8'00000101, Y=$4\o_result[7:0]
      New ports: A=$3\o_result[7:0] [3:0], B=4'0101, Y=$4\o_result[7:0] [3:0]
      New connections: $4\o_result[7:0] [7:4] = 4'0000
    Consolidated identical input bits for $mux cell $procmux$274:
      Old ports: A=$2\o_result[7:0] [3:0], B=4'0110, Y=$3\o_result[7:0] [3:0]
      New ports: A={ $2\o_result[7:0] [3] $2\o_result[7:0] [0] $2\o_result[7:0] [0] }, B=3'010, Y={ $3\o_result[7:0] [3] $3\o_result[7:0] [1:0] }
      New connections: $3\o_result[7:0] [2] = $3\o_result[7:0] [1]
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$262:
      Old ports: A=$4\o_result[7:0], B=8'00000100, Y=$5\o_result[7:0]
      New ports: A=$4\o_result[7:0] [3:0], B=4'0100, Y=$5\o_result[7:0] [3:0]
      New connections: $5\o_result[7:0] [7:4] = 4'0000
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$256:
      Old ports: A=$5\o_result[7:0], B=8'00000011, Y=$6\o_result[7:0]
      New ports: A=$5\o_result[7:0] [3:0], B=4'0011, Y=$6\o_result[7:0] [3:0]
      New connections: $6\o_result[7:0] [7:4] = 4'0000
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$250:
      Old ports: A=$6\o_result[7:0], B=8'00000010, Y=$7\o_result[7:0]
      New ports: A=$6\o_result[7:0] [3:0], B=4'0010, Y=$7\o_result[7:0] [3:0]
      New connections: $7\o_result[7:0] [7:4] = 4'0000
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$244:
      Old ports: A=$7\o_result[7:0], B=8'00000001, Y=\o_result
      New ports: A=$7\o_result[7:0] [3:0], B=4'0001, Y=\o_result [3:0]
      New connections: \o_result [7:4] = 4'0000
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$379:
      Old ports: A={ 7'0000000 \i_argB [0] }, B={ 6'000000 $add$../MODEL/counting1.sv:19$136_Y }, Y=$2\wynik[7:0]
      New ports: A={ 1'0 \i_argB [0] }, B=$add$../MODEL/counting1.sv:19$136_Y, Y=$2\wynik[7:0] [1:0]
      New connections: $2\wynik[7:0] [7:2] = 6'000000
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 18 changes.

9.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.19.6. Executing OPT_SHARE pass.

9.19.7. Executing OPT_DFF pass (perform DFF optimizations).

9.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..

9.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
<suppressed ~1 debug messages>
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
<suppressed ~21 debug messages>
Optimizing module exe_unit_rtl.

9.19.10. Rerunning OPT passes. (Maybe there is more to do..)

9.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

9.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$376:
      Old ports: A={ 6'000000 $2\wynik[7:0] [1:0] }, B=$add$../MODEL/counting1.sv:19$138_Y, Y=$3\wynik[7:0]
      New ports: A={ 1'0 $2\wynik[7:0] [1:0] }, B=$add$../MODEL/counting1.sv:19$138_Y [2:0], Y=$3\wynik[7:0] [2:0]
      New connections: $3\wynik[7:0] [7:3] = 5'00000
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 1 changes.

9.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.19.14. Executing OPT_SHARE pass.

9.19.15. Executing OPT_DFF pass (perform DFF optimizations).

9.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 6 unused wires.
<suppressed ~2 debug messages>

9.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
<suppressed ~17 debug messages>
Optimizing module exe_unit_rtl.

9.19.18. Rerunning OPT passes. (Maybe there is more to do..)

9.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

9.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$373:
      Old ports: A={ 5'00000 $3\wynik[7:0] [2:0] }, B=$add$../MODEL/counting1.sv:19$140_Y, Y=$4\wynik[7:0]
      New ports: A={ 1'0 $3\wynik[7:0] [2:0] }, B=$add$../MODEL/counting1.sv:19$140_Y [3:0], Y=$4\wynik[7:0] [3:0]
      New connections: $4\wynik[7:0] [7:4] = 4'0000
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 1 changes.

9.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.19.22. Executing OPT_SHARE pass.

9.19.23. Executing OPT_DFF pass (perform DFF optimizations).

9.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

9.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
<suppressed ~13 debug messages>
Optimizing module exe_unit_rtl.

9.19.26. Rerunning OPT passes. (Maybe there is more to do..)

9.19.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

9.19.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$370:
      Old ports: A={ 4'0000 $4\wynik[7:0] [3:0] }, B=$add$../MODEL/counting1.sv:19$142_Y, Y=$5\wynik[7:0]
      New ports: A={ 1'0 $4\wynik[7:0] [3:0] }, B=$add$../MODEL/counting1.sv:19$142_Y [4:0], Y=$5\wynik[7:0] [4:0]
      New connections: $5\wynik[7:0] [7:5] = 3'000
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 1 changes.

9.19.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.19.30. Executing OPT_SHARE pass.

9.19.31. Executing OPT_DFF pass (perform DFF optimizations).

9.19.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

9.19.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module exe_unit_rtl.

9.19.34. Rerunning OPT passes. (Maybe there is more to do..)

9.19.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

9.19.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$367:
      Old ports: A={ 3'000 $5\wynik[7:0] [4:0] }, B=$add$../MODEL/counting1.sv:19$144_Y, Y=$6\wynik[7:0]
      New ports: A={ 1'0 $5\wynik[7:0] [4:0] }, B=$add$../MODEL/counting1.sv:19$144_Y [5:0], Y=$6\wynik[7:0] [5:0]
      New connections: $6\wynik[7:0] [7:6] = 2'00
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 1 changes.

9.19.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.19.38. Executing OPT_SHARE pass.

9.19.39. Executing OPT_DFF pass (perform DFF optimizations).

9.19.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

9.19.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
<suppressed ~5 debug messages>
Optimizing module exe_unit_rtl.

9.19.42. Rerunning OPT passes. (Maybe there is more to do..)

9.19.43. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

9.19.44. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
    Consolidated identical input bits for $mux cell $procmux$364:
      Old ports: A={ 2'00 $6\wynik[7:0] [5:0] }, B=$add$../MODEL/counting1.sv:19$146_Y, Y=$7\wynik[7:0]
      New ports: A={ 1'0 $6\wynik[7:0] [5:0] }, B=$add$../MODEL/counting1.sv:19$146_Y [6:0], Y=$7\wynik[7:0] [6:0]
      New connections: $7\wynik[7:0] [7] = 1'0
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 1 changes.

9.19.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.19.46. Executing OPT_SHARE pass.

9.19.47. Executing OPT_DFF pass (perform DFF optimizations).

9.19.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.19.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.19.50. Rerunning OPT passes. (Maybe there is more to do..)

9.19.51. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit_rtl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

9.19.52. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
  Optimizing cells in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
  Optimizing cells in module \exe_unit_rtl.
Performed a total of 0 changes.

9.19.53. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.19.54. Executing OPT_SHARE pass.

9.19.55. Executing OPT_DFF pass (perform DFF optimizations).

9.19.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..

9.19.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
Optimizing module exe_unit_rtl.

9.19.58. Finished OPT passes. (There is nothing left to do.)

9.20. Executing TECHMAP pass (map to technology primitives).

9.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using template $paramod$constmap:f99840ec908483ed147148e5b457b3755f98764b$paramod$d21c61fff419f8b6877980d4fcf2e10563ba47ff\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:f99840ec908483ed147148e5b457b3755f98764b$paramod$0b3558e50f713d8e69e822965d47c8f138f0103d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$08c2d337fba0d8fba53e35b89be96dd105931d9e\_90_alu for cells of type $alu.
Using template $paramod$3294ee6476b7aed16e63c3aab64dbbc778f014df\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_90_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$1d1e68f77481583066c6d429218f48ea9d5739b3\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~2127 debug messages>

9.21. Executing OPT pass (performing simple optimizations).

9.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
<suppressed ~2 debug messages>
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
<suppressed ~1 debug messages>
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
<suppressed ~550 debug messages>
Optimizing module exe_unit_rtl.
<suppressed ~162 debug messages>

9.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
<suppressed ~45 debug messages>
Finding identical cells in module `\exe_unit_rtl'.
<suppressed ~270 debug messages>
Removed a total of 105 cells.

9.21.3. Executing OPT_DFF pass (perform DFF optimizations).

9.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 118 unused cells and 1093 unused wires.
<suppressed ~121 debug messages>

9.21.5. Finished fast OPT passes.

9.22. Executing ABC pass (technology mapping using ABC).

9.22.1. Extracting gate netlist of module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval' to `<abc-temp-dir>/input.blif'..
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

9.22.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

9.22.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        2
Removing temp directory.

9.22.2. Extracting gate netlist of module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

9.22.3. Extracting gate netlist of module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 14 gates and 23 wires to a netlist network with 7 inputs and 3 outputs.

9.22.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

9.22.3.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

9.22.4. Extracting gate netlist of module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 44 gates and 54 wires to a netlist network with 8 inputs and 4 outputs.

9.22.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

9.22.4.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:       16
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:        internal signals:       42
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

9.22.5. Extracting gate netlist of module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 7 gates and 16 wires to a netlist network with 8 inputs and 7 outputs.

9.22.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

9.22.5.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        6
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

9.22.6. Extracting gate netlist of module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 282 gates and 299 wires to a netlist network with 16 inputs and 8 outputs.

9.22.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

9.22.6.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       46
ABC RESULTS:               MUX cells:       77
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:       14
ABC RESULTS:               NOT cells:       19
ABC RESULTS:                OR cells:       29
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:              XNOR cells:       22
ABC RESULTS:               XOR cells:       70
ABC RESULTS:        internal signals:      275
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        8
Removing temp directory.

9.22.7. Extracting gate netlist of module `\exe_unit_rtl' to `<abc-temp-dir>/input.blif'..
Extracted 353 gates and 412 wires to a netlist network with 58 inputs and 12 outputs.

9.22.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

9.22.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       26
ABC RESULTS:            ANDNOT cells:      101
ABC RESULTS:               MUX cells:       17
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOR cells:       26
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       78
ABC RESULTS:             ORNOT cells:       22
ABC RESULTS:              XNOR cells:       16
ABC RESULTS:               XOR cells:       25
ABC RESULTS:        internal signals:      342
ABC RESULTS:           input signals:       58
ABC RESULTS:          output signals:       12
Removing temp directory.

9.23. Executing OPT pass (performing simple optimizations).

9.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval.
<suppressed ~2 debug messages>
Optimizing module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000.
Optimizing module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000.
Optimizing module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000.
Optimizing module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000.
<suppressed ~77 debug messages>
Optimizing module exe_unit_rtl.

9.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Finding identical cells in module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Finding identical cells in module `\exe_unit_rtl'.
Removed a total of 0 cells.

9.23.3. Executing OPT_DFF pass (perform DFF optimizations).

9.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 11 unused cells and 359 unused wires.
<suppressed ~17 debug messages>

9.23.5. Finished fast OPT passes.

9.24. Executing HIERARCHY pass (managing design hierarchy).

9.24.1. Analyzing design hierarchy..
Top module:  \exe_unit_rtl
Used module:     $paramod\crc4check\WCODE=s32'00000000000000000000000000001000
Used module:     $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:     $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000
Used module:     $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\u1intou2\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000

9.24.2. Analyzing design hierarchy..
Top module:  \exe_unit_rtl
Used module:     $paramod\crc4check\WCODE=s32'00000000000000000000000000001000
Used module:     $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval
Used module:     $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000
Used module:     $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\u1intou2\BITS=s32'00000000000000000000000000001000
Used module:     $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000
Removed 0 unused modules.

9.25. Printing statistics.

=== $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval ===

   Number of wires:                 11
   Number of wire bits:             67
   Number of public wires:           7
   Number of public wire bits:      63
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $_MUX_                          3
     $_XOR_                          3

=== $paramod\crc4check\WCODE=s32'00000000000000000000000000001000 ===

   Number of wires:                  8
   Number of wire bits:             79
   Number of public wires:           8
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000 ===

   Number of wires:                 14
   Number of wire bits:             59
   Number of public wires:           3
   Number of public wire bits:      48
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14
     $_ANDNOT_                       4
     $_NOR_                          2
     $_OR_                           8

=== $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000 ===

   Number of wires:                 38
   Number of wire bits:             83
   Number of public wires:           3
   Number of public wire bits:      48
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 39
     $_ANDNOT_                      15
     $_NAND_                         1
     $_NOR_                          1
     $_ORNOT_                        6
     $_OR_                          16

=== $paramod\u1intou2\BITS=s32'00000000000000000000000000001000 ===

   Number of wires:                  2
   Number of wire bits:             16
   Number of public wires:           2
   Number of public wire bits:      16
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $_MUX_                          6
     $_OR_                           1

=== $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000 ===

   Number of wires:                279
   Number of wire bits:            353
   Number of public wires:           6
   Number of public wire bits:      80
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                281
     $_ANDNOT_                      46
     $_MUX_                         77
     $_NAND_                         5
     $_NOR_                         14
     $_NOT_                          9
     $_ORNOT_                        9
     $_OR_                          29
     $_XNOR_                        22
     $_XOR_                         70

=== exe_unit_rtl ===

   Number of wires:                328
   Number of wire bits:            415
   Number of public wires:          17
   Number of public wire bits:     104
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                329
     $_ANDNOT_                     101
     $_AND_                         26
     $_MUX_                         17
     $_NAND_                         8
     $_NOR_                         26
     $_NOT_                          4
     $_ORNOT_                       22
     $_OR_                          78
     $_XNOR_                        16
     $_XOR_                         25
     $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval      1
     $paramod\crc4check\WCODE=s32'00000000000000000000000000001000      1
     $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000      1
     $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000      1
     $paramod\u1intou2\BITS=s32'00000000000000000000000000001000      1
     $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000      1

=== design hierarchy ===

   exe_unit_rtl                      1
     $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval      1
     $paramod\crc4check\WCODE=s32'00000000000000000000000000001000      1
     $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000      1
     $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000      1
     $paramod\u1intou2\BITS=s32'00000000000000000000000000001000      1
     $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000      1

   Number of wires:                680
   Number of wire bits:           1072
   Number of public wires:          46
   Number of public wire bits:     438
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                670
     $_ANDNOT_                     166
     $_AND_                         26
     $_MUX_                        103
     $_NAND_                        14
     $_NOR_                         43
     $_NOT_                         13
     $_ORNOT_                       37
     $_OR_                         132
     $_XNOR_                        38
     $_XOR_                         98

9.26. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval...
Checking module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000...
Checking module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000...
Checking module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000...
Checking module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000...
Checking module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000...
Checking module exe_unit_rtl...
Found and reported 0 problems.

10. Executing ABC pass (technology mapping using ABC).

10.1. Extracting gate netlist of module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval' to `<abc-temp-dir>/input.blif'..
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

10.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        3
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        2
Removing temp directory.

10.2. Extracting gate netlist of module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

10.3. Extracting gate netlist of module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 14 gates and 21 wires to a netlist network with 7 inputs and 3 outputs.

10.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

10.4. Extracting gate netlist of module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 39 gates and 47 wires to a netlist network with 8 inputs and 4 outputs.

10.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:        8
ABC RESULTS:        internal signals:       35
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

10.5. Extracting gate netlist of module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 7 outputs.

10.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        7
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

10.6. Extracting gate netlist of module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000' to `<abc-temp-dir>/input.blif'..
Extracted 281 gates and 297 wires to a netlist network with 16 inputs and 8 outputs.

10.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       44
ABC RESULTS:               NOT cells:       15
ABC RESULTS:                OR cells:       31
ABC RESULTS:               XOR cells:       26
ABC RESULTS:              ZERO cells:        3
ABC RESULTS:        internal signals:      273
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:        8
Removing temp directory.

10.7. Extracting gate netlist of module `\exe_unit_rtl' to `<abc-temp-dir>/input.blif'..
Extracted 323 gates and 381 wires to a netlist network with 58 inputs and 12 outputs.

10.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      146
ABC RESULTS:               NOT cells:       25
ABC RESULTS:                OR cells:      116
ABC RESULTS:               XOR cells:       27
ABC RESULTS:        internal signals:      311
ABC RESULTS:           input signals:       58
ABC RESULTS:          output signals:       12
Removing temp directory.

11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval..
Finding unused cells or wires in module $paramod\crc4check\WCODE=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\decoder_therm\LEN=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\u1intou2\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module $paramod\zliczanie1\BITS=s32'00000000000000000000000000001000..
Finding unused cells or wires in module \exe_unit_rtl..
Removed 0 unused cells and 773 unused wires.
<suppressed ~6 debug messages>

12. Executing Verilog backend.
Dumping module `$paramod$0f84a70ebc21543b73842bcb7d89a48776b55cdb\crc_eval'.
Dumping module `$paramod\crc4check\WCODE=s32'00000000000000000000000000001000'.
Dumping module `$paramod\decoder_therm\LEN=s32'00000000000000000000000000001000'.
Dumping module `$paramod\dekoder_priorytetowy\BITS=s32'00000000000000000000000000001000'.
Dumping module `$paramod\u1intou2\BITS=s32'00000000000000000000000000001000'.
Dumping module `$paramod\zliczanie1\BITS=s32'00000000000000000000000000001000'.
Dumping module `\exe_unit_rtl'.

Warnings: 7 unique messages, 9 total
End of script. Logfile hash: c364d317a5, CPU: user 1.27s system 0.05s
Yosys 0.12 (git sha1 UNKNOWN, clang 12.0.0 -fPIC -Os)
Time spent: 53% 2x abc (1 sec), 12% 42x opt_expr (0 sec), ...
